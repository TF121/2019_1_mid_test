- sigaction1.c  -
인터럽트 걸어도 강제종료 전까지 block 하는 코드

- sigaction2.c -
signal()함수를 쓸 때는 여러가지 추가적인 시그널 처리 함수들을 호출함.
하지만 sigaction()함수는 그런 추가적인 함수 호출없이 동일한 기능 가능.



- sigaction3-sender.c (시그널 전송 프로그램)-
시그널 SIGUSER2에 대해 kill()시스템 함수를 통해 1000000번을 설정한 PID 프로세스에 전송한다.

- sigaction3-receiver.c -
위의 송신 프로그램에서 보낸 시그널을 수신해 시그널별로 얼마나 처리가 되었는지 결과 카운팅.

( 설명)
수신 프로그램은 초기 시그널 마스크를 sigfillset()함수를 통해서 모두 블록으로 초기화하고 25초간 수면상태로 진입 후 다시 모든 시그널을 블록하지 않는 구조이다.
만약 초기 블록 후 수면상태까지 시그널이 모두 전송되었다면 단 하나의 시그널만 처리될 것이다.
왜냐하면 초기 블록된 상태에서 수신된 동일 시그널은 모두 보류 상태로 있고
보류 상태가 끝나면 단 하나의 시그널만 처리되기 때문이다.
하지만 만약 수면 상태 후에 시그널이 모두 '0'으로 초기화된 후에 전송된 시그널은 커널의 context s
witching을 고려하여 많은 수가 처리될 것이다.

( 결론)
시그널 방식은 비동기적인 방식으로 시그널이 프로세스에 제대로 전달되었는지 확인할 방법이 없다.
또한 경우에 따라서는 처리가 되지 않고 버려지기 때문에 신호가 전달되었는지를 신뢰할 수 없으므로
비신뢰적인 특징을 가진다고 말할 수 있다.
